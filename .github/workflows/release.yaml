name: Release

on:
  push:
    branches:
    - main

jobs:
  code_quality:
    if: "!contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Set up Go 1.13
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
    - name: Lint go files
      run: |
        go env
        go get -u golang.org/x/lint/golint
        golint ./src/...
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        

  release:
    needs: [ 'code_quality' ]
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: Semantic
    runs-on: ubuntu-20.04
    steps:
    - name: Install zsh
      run: sudo apt install zsh

    - name: Checkout
      uses: actions/checkout@v2
      with:
        # persist-credentials: false
        fetch-depth: 0
      
    - uses: actions/setup-node@v2.1.4
      with:
        node-version: 14
        
    - name: 'Install semantic-release'
      run: |
        npm i -g semantic-release  \
          semantic-release-monorepo \
          @semantic-release/commit-analyzer \
          @semantic-release/release-notes-generator \
          semantic-release-helm \
          @semantic-release/changelog \
          @semantic-release/github \
          @semantic-release/git \
          @semantic-release/exec

        curl -LO https://github.com/norwoodj/helm-docs/releases/download/v1.5.0/helm-docs_1.5.0_Linux_x86_64.tar.gz
        tar -xzf helm-docs_1.5.0_Linux_x86_64.tar.gz
        sudo mv helm-docs /usr/local/bin

        # check helm-docs is installed
        helm-docs --version && exit 0 || exit 1

    - name: 'release'
      id: release
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
      run: |
        sudo chmod u+x -R .github/workflows/scripts/
        
        # Release Application fist
        cd ./src/ && npx semantic-release -e semantic-release-monorepo
        cd ..
        
        # Release other packages
        find . -name "package.json" -type f -not -path "./src/*" | xargs dirname | \
        xargs -I@ bash -c 'cd $PWD/@ && echo @ && npx semantic-release -e semantic-release-monorepo && sleep 1'